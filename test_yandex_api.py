import requests
import urllib.parse
import xml.etree.ElementTree as ET
import urllib3
from utils.config import YANDEX_FOLDER_ID, YANDEX_API_KEY

# –û—Ç–∫–ª—é—á–∞–µ–º SSL Warning
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
YANDEX_IMAGE_API_URL = "https://yandex.com/images-xml"
YANDEX_API_KEY = YANDEX_API_KEY
YANDEX_FOLDER_ID = YANDEX_FOLDER_ID

def test_yandex_image_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –Ø–Ω–¥–µ–∫—Å–∞ ‚Äì —Ç–µ–ø–µ—Ä—å –±–µ—Ä—ë–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ <url> –≤ <doc>"""
    query = "–ö—Ä–µ–º–ª—å, –ú–æ—Å–∫–≤–∞"  # –£–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    encoded_query = urllib.parse.quote(query)

    params = {
        "folderid": YANDEX_FOLDER_ID,
        "apikey": YANDEX_API_KEY,
        "text": query,
        "itype": "jpg,png",  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
        "isize": "large",  # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        "iorient": "horizontal"  # –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ
    }

    # –õ–æ–≥–∏—Ä—É–µ–º URL –∑–∞–ø—Ä–æ—Å–∞
    full_url = f"{YANDEX_IMAGE_API_URL}?{'&'.join([f'{k}={v}' for k, v in params.items()])}"
    print(f"üîç –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ API –Ø–Ω–¥–µ–∫—Å–∞: {full_url}")

    response = requests.get(YANDEX_IMAGE_API_URL, params=params, verify=False)

    if response.status_code != 200:
        print(f"‚ö† –û—à–∏–±–∫–∞ API –Ø–Ω–¥–µ–∫—Å–∞: {response.status_code} - {response.text}")
        return None

    print(f"üì• –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API –Ø–Ω–¥–µ–∫—Å–∞:\n{response.text}")

    try:
        # –†–∞–∑–±–∏—Ä–∞–µ–º XML-–æ—Ç–≤–µ—Ç
        root = ET.fromstring(response.text)

        for doc in root.findall(".//doc"):
            img_url_element = doc.find(".//url")  # –ë–µ—Ä—ë–º `<url>` –≤–Ω—É—Ç—Ä–∏ `<doc>`
            if img_url_element is not None:
                img_url = img_url_element.text

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (jpg, png)
                if img_url.endswith(".jpg") or img_url.endswith(".png"):
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_url}")
                    return img_url

        print("‚ö† API –Ω–µ –≤–µ—Ä–Ω—É–ª –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
        return None

    except ET.ParseError:
        print(f"‚ö† –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ XML-–æ—Ç–≤–µ—Ç–∞ –Ø–Ω–¥–µ–∫—Å–∞. –û—Ç–≤–µ—Ç API:\n{response.text}")
        return None

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if __name__ == "__main__":
    test_yandex_image_api()
